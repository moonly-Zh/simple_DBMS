
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ANY AS BY CHAR CHECK COMMA CREATE DATABASE DATABASES DE DEC DEFAULT DELETE DESCRIBE DISTINCT DOUBLE DQUOTE DROP ESCAPE ESCAPED EXISTS EXIT FALSE FLOAT FOREIGN FROM GE GRANT GROUP HAVING ID ID_NUM IN INSERT INT INTO IS JOIN KEY LE LIKE LONG LPAREN MOD NOT NUM ON OR ORDER QUOTE RPAREN SELECT SEMICOLON SET SHOW STRING TABLE TO TRUE UNION UNIQUE UPDATE USE VALUES VARCHAR WHERE\n    statement   : database_statement SEMICOLON\n                | table_statement SEMICOLON\n    database_statement  : CREATE DATABASE IDdatabase_statement  : SHOW DATABASESdatabase_statement : USE IDdatabase_statement : DROP DATABASE IDtable_statement : CREATE TABLE ID LPAREN base_elements_list RPAREN\n    base_elements_list  : base_element\n                        | base_elements_list COMMA base_element\n    base_element    : ID data_typedata_type    : CHAR LPAREN NUM RPAREN\n                    | INT\n                    | FLOAT\n    \n    table_statement :   INSERT INTO ID LPAREN opt_column_list RPAREN VALUES  insert_values_list\n                    |   INSERT INTO ID  VALUES  insert_values_list\n    \n    opt_column_list     :   ID\n                        |   opt_column_list COMMA ID\n    \n    insert_values_list  : LPAREN insert_value RPAREN\n                        | insert_values_list COMMA LPAREN insert_value RPAREN\n    \n    insert_value    : base_value\n                    | insert_value COMMA base_value\n    \n    base_value  : NUM\n                | QUOTE ID QUOTE\n                | DQUOTE ID DQUOTE\n                | ID_NUM\n    \n    table_statement    : SELECT sel_col_list FROM ID\n                        | SELECT sel_col_list FROM ID WHERE condition\n    \n    sel_col_list    : sel_col_list COMMA ID\n                    | ID\n                    | '*'\n    \n    condition   : condition OR and_condition\n                | and_condition\n    \n    and_condition   : and_condition AND factor\n                    | factor\n    \n    factor  : ID_factor\n            | NUM_factor\n            | LPAREN condition RPAREN\n            | NOT factor\n    \n    ID_factor   : ID '=' QUOTE ID QUOTE\n                | ID '=' DQUOTE ID DQUOTE\n                | ID '=' ID_NUM\n                | ID LIKE QUOTE ID QUOTE\n                | ID LIKE DQUOTE ID DQUOTE\n                | ID LIKE ID_NUM\n    \n    NUM_factor   : ID '=' NUM\n                | ID DE NUM\n                | ID '>' NUM\n                | ID GE NUM\n                | ID '<' NUM\n                | ID LE NUM\n    \n    table_statement :   UPDATE ID SET set_list  WHERE condition\n    \n    set_list    : set_list COMMA set_atom\n                | set_atom\n    \n    set_atom    : ID '=' QUOTE ID QUOTE\n                | ID '=' DQUOTE ID DQUOTE\n                | ID '=' ID_NUM\n                | ID '=' NUM\n    \n    table_statement : DELETE FROM ID WHERE condition\n                    | DELETE FROM ID\n    \n    table_statement :   DROP TABLE ID\n    "
    
_lr_action_items = {'CREATE':([0,],[4,]),'SHOW':([0,],[5,]),'USE':([0,],[6,]),'DROP':([0,],[7,]),'INSERT':([0,],[8,]),'SELECT':([0,],[9,]),'UPDATE':([0,],[10,]),'DELETE':([0,],[11,]),'$end':([1,12,13,],[0,-1,-2,]),'SEMICOLON':([2,3,16,17,26,28,29,34,38,49,56,57,58,59,60,67,78,83,95,101,109,110,113,114,115,116,117,118,119,120,121,123,135,136,137,138,139,],[12,13,-4,-5,-3,-6,-60,-59,-26,-15,-58,-32,-34,-35,-36,-7,-27,-51,-38,-18,-41,-45,-44,-46,-47,-48,-49,-50,-31,-33,-37,-14,-19,-39,-40,-42,-43,]),'DATABASE':([4,7,],[14,18,]),'TABLE':([4,7,],[15,19,]),'DATABASES':([5,],[16,]),'ID':([6,9,10,14,15,18,19,20,25,31,32,33,35,36,43,51,53,54,61,62,68,70,75,76,79,80,92,93,107,108,111,112,],[17,22,24,26,27,28,29,30,34,38,39,40,44,47,55,55,55,40,55,55,44,99,103,104,105,106,55,55,130,131,132,133,]),'INTO':([8,],[20,]),'*':([9,],[23,]),'FROM':([11,21,22,23,39,],[25,31,-29,-30,-28,]),'COMMA':([21,22,23,39,41,42,45,46,47,48,49,63,65,66,72,73,74,77,81,82,84,97,99,101,123,124,125,126,127,128,129,134,135,],[32,-29,-30,-28,54,-53,68,-8,-16,70,71,-10,-12,-13,102,-20,-22,-25,-56,-57,-52,-9,-17,-18,71,102,-21,-23,-24,-54,-55,-11,-19,]),'SET':([24,],[33,]),'LPAREN':([27,30,37,43,51,53,61,62,64,71,92,93,98,],[35,36,50,61,61,61,61,61,96,100,61,61,50,]),'VALUES':([30,69,],[37,98,]),'WHERE':([34,38,41,42,81,82,84,128,129,],[43,51,53,-53,-56,-57,-52,-54,-55,]),'=':([40,55,],[52,85,]),'NOT':([43,51,53,61,62,92,93,],[62,62,62,62,62,62,62,]),'CHAR':([44,],[64,]),'INT':([44,],[65,]),'FLOAT':([44,],[66,]),'RPAREN':([45,46,47,48,57,58,59,60,63,65,66,72,73,74,77,94,95,97,99,109,110,113,114,115,116,117,118,119,120,121,122,124,125,126,127,134,136,137,138,139,],[67,-8,-16,69,-32,-34,-35,-36,-10,-12,-13,101,-20,-22,-25,121,-38,-9,-17,-41,-45,-44,-46,-47,-48,-49,-50,-31,-33,-37,134,135,-21,-23,-24,-11,-39,-40,-42,-43,]),'NUM':([50,52,85,87,88,89,90,91,96,100,102,],[74,82,110,114,115,116,117,118,122,74,74,]),'QUOTE':([50,52,85,86,100,102,103,105,130,132,],[75,79,107,111,75,75,126,128,136,138,]),'DQUOTE':([50,52,85,86,100,102,104,106,131,133,],[76,80,108,112,76,76,127,129,137,139,]),'ID_NUM':([50,52,85,86,100,102,],[77,81,109,113,77,77,]),'LIKE':([55,],[86,]),'DE':([55,],[87,]),'>':([55,],[88,]),'GE':([55,],[89,]),'<':([55,],[90,]),'LE':([55,],[91,]),'OR':([56,57,58,59,60,78,83,94,95,109,110,113,114,115,116,117,118,119,120,121,136,137,138,139,],[92,-32,-34,-35,-36,92,92,92,-38,-41,-45,-44,-46,-47,-48,-49,-50,-31,-33,-37,-39,-40,-42,-43,]),'AND':([57,58,59,60,95,109,110,113,114,115,116,117,118,119,120,121,136,137,138,139,],[93,-34,-35,-36,-38,-41,-45,-44,-46,-47,-48,-49,-50,93,-33,-37,-39,-40,-42,-43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'database_statement':([0,],[2,]),'table_statement':([0,],[3,]),'sel_col_list':([9,],[21,]),'set_list':([33,],[41,]),'set_atom':([33,54,],[42,84,]),'base_elements_list':([35,],[45,]),'base_element':([35,68,],[46,97,]),'opt_column_list':([36,],[48,]),'insert_values_list':([37,98,],[49,123,]),'condition':([43,51,53,61,],[56,78,83,94,]),'and_condition':([43,51,53,61,92,],[57,57,57,57,119,]),'factor':([43,51,53,61,62,92,93,],[58,58,58,58,95,58,120,]),'ID_factor':([43,51,53,61,62,92,93,],[59,59,59,59,59,59,59,]),'NUM_factor':([43,51,53,61,62,92,93,],[60,60,60,60,60,60,60,]),'data_type':([44,],[63,]),'insert_value':([50,100,],[72,124,]),'base_value':([50,100,102,],[73,73,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> database_statement SEMICOLON','statement',2,'p_statement','grammars.py',279),
  ('statement -> table_statement SEMICOLON','statement',2,'p_statement','grammars.py',280),
  ('database_statement -> CREATE DATABASE ID','database_statement',3,'p_database_statement_c','grammars.py',289),
  ('database_statement -> SHOW DATABASES','database_statement',2,'p_database_statement_s','grammars.py',295),
  ('database_statement -> USE ID','database_statement',2,'p_database_statement_u','grammars.py',300),
  ('database_statement -> DROP DATABASE ID','database_statement',3,'p_database_statement_d','grammars.py',306),
  ('table_statement -> CREATE TABLE ID LPAREN base_elements_list RPAREN','table_statement',6,'p_table_statement_create','grammars.py',315),
  ('base_elements_list -> base_element','base_elements_list',1,'p_base_elements_list','grammars.py',322),
  ('base_elements_list -> base_elements_list COMMA base_element','base_elements_list',3,'p_base_elements_list','grammars.py',323),
  ('base_element -> ID data_type','base_element',2,'p_base_element','grammars.py',335),
  ('data_type -> CHAR LPAREN NUM RPAREN','data_type',4,'p_data_type','grammars.py',343),
  ('data_type -> INT','data_type',1,'p_data_type','grammars.py',344),
  ('data_type -> FLOAT','data_type',1,'p_data_type','grammars.py',345),
  ('table_statement -> INSERT INTO ID LPAREN opt_column_list RPAREN VALUES insert_values_list','table_statement',8,'p_table_statement_insert','grammars.py',357),
  ('table_statement -> INSERT INTO ID VALUES insert_values_list','table_statement',5,'p_table_statement_insert','grammars.py',358),
  ('opt_column_list -> ID','opt_column_list',1,'p_opt_column_list','grammars.py',370),
  ('opt_column_list -> opt_column_list COMMA ID','opt_column_list',3,'p_opt_column_list','grammars.py',371),
  ('insert_values_list -> LPAREN insert_value RPAREN','insert_values_list',3,'p_insert_values_list','grammars.py',383),
  ('insert_values_list -> insert_values_list COMMA LPAREN insert_value RPAREN','insert_values_list',5,'p_insert_values_list','grammars.py',384),
  ('insert_value -> base_value','insert_value',1,'p_insert_value','grammars.py',398),
  ('insert_value -> insert_value COMMA base_value','insert_value',3,'p_insert_value','grammars.py',399),
  ('base_value -> NUM','base_value',1,'p_base_value','grammars.py',414),
  ('base_value -> QUOTE ID QUOTE','base_value',3,'p_base_value','grammars.py',415),
  ('base_value -> DQUOTE ID DQUOTE','base_value',3,'p_base_value','grammars.py',416),
  ('base_value -> ID_NUM','base_value',1,'p_base_value','grammars.py',417),
  ('table_statement -> SELECT sel_col_list FROM ID','table_statement',4,'p_table_statement_select','grammars.py',434),
  ('table_statement -> SELECT sel_col_list FROM ID WHERE condition','table_statement',6,'p_table_statement_select','grammars.py',435),
  ('sel_col_list -> sel_col_list COMMA ID','sel_col_list',3,'p_sel_col_list','grammars.py',445),
  ('sel_col_list -> ID','sel_col_list',1,'p_sel_col_list','grammars.py',446),
  ('sel_col_list -> *','sel_col_list',1,'p_sel_col_list','grammars.py',447),
  ('condition -> condition OR and_condition','condition',3,'p_where_condition','grammars.py',459),
  ('condition -> and_condition','condition',1,'p_where_condition','grammars.py',460),
  ('and_condition -> and_condition AND factor','and_condition',3,'p_and_condition','grammars.py',471),
  ('and_condition -> factor','and_condition',1,'p_and_condition','grammars.py',472),
  ('factor -> ID_factor','factor',1,'p_factor','grammars.py',483),
  ('factor -> NUM_factor','factor',1,'p_factor','grammars.py',484),
  ('factor -> LPAREN condition RPAREN','factor',3,'p_factor','grammars.py',485),
  ('factor -> NOT factor','factor',2,'p_factor','grammars.py',486),
  ('ID_factor -> ID = QUOTE ID QUOTE','ID_factor',5,'p_ID_factor','grammars.py',499),
  ('ID_factor -> ID = DQUOTE ID DQUOTE','ID_factor',5,'p_ID_factor','grammars.py',500),
  ('ID_factor -> ID = ID_NUM','ID_factor',3,'p_ID_factor','grammars.py',501),
  ('ID_factor -> ID LIKE QUOTE ID QUOTE','ID_factor',5,'p_ID_factor','grammars.py',502),
  ('ID_factor -> ID LIKE DQUOTE ID DQUOTE','ID_factor',5,'p_ID_factor','grammars.py',503),
  ('ID_factor -> ID LIKE ID_NUM','ID_factor',3,'p_ID_factor','grammars.py',504),
  ('NUM_factor -> ID = NUM','NUM_factor',3,'p_NUM_factor','grammars.py',524),
  ('NUM_factor -> ID DE NUM','NUM_factor',3,'p_NUM_factor','grammars.py',525),
  ('NUM_factor -> ID > NUM','NUM_factor',3,'p_NUM_factor','grammars.py',526),
  ('NUM_factor -> ID GE NUM','NUM_factor',3,'p_NUM_factor','grammars.py',527),
  ('NUM_factor -> ID < NUM','NUM_factor',3,'p_NUM_factor','grammars.py',528),
  ('NUM_factor -> ID LE NUM','NUM_factor',3,'p_NUM_factor','grammars.py',529),
  ('table_statement -> UPDATE ID SET set_list WHERE condition','table_statement',6,'p_table_statement_update','grammars.py',550),
  ('set_list -> set_list COMMA set_atom','set_list',3,'p_set_list','grammars.py',557),
  ('set_list -> set_atom','set_list',1,'p_set_list','grammars.py',558),
  ('set_atom -> ID = QUOTE ID QUOTE','set_atom',5,'p_set_atom','grammars.py',569),
  ('set_atom -> ID = DQUOTE ID DQUOTE','set_atom',5,'p_set_atom','grammars.py',570),
  ('set_atom -> ID = ID_NUM','set_atom',3,'p_set_atom','grammars.py',571),
  ('set_atom -> ID = NUM','set_atom',3,'p_set_atom','grammars.py',572),
  ('table_statement -> DELETE FROM ID WHERE condition','table_statement',5,'p_table_statement_delete','grammars.py',586),
  ('table_statement -> DELETE FROM ID','table_statement',3,'p_table_statement_delete','grammars.py',587),
  ('table_statement -> DROP TABLE ID','table_statement',3,'p_table_statement_drop','grammars.py',597),
]
